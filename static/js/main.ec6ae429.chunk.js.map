{"version":3,"sources":["useFetch.js","context.js","SearchForm.js","Movies.js","Home.js","SingleMovie.js","App.js","index.js"],"names":["useFetch","urlParams","console","log","useState","posters","setPosters","loading","setLoading","isError","message","error","setError","fetchMovies","url","a","fetch","response","json","data","Response","Error","useEffect","AppContext","React","createContext","AppProvider","children","searchValue","setSearchValue","Provider","value","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","type","onChange","target","Movies","Search","map","poster","Title","Year","imdbID","Poster","to","key","src","alt","Home","SingleMovie","useParams","movie","Plot","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec6ae429.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst API_ENDPOINT = `https://www.omdbapi.com/?apikey=5325b077`;\n\nconst useFetch = (urlParams) => {\n  console.log(urlParams);\n  const [posters, setPosters] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({ isError: false, message: \"\" });\n\n  const fetchMovies = async (url) => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (data.Response == \"True\") {\n        console.log(\"data\", data);\n        setPosters(data);\n        setError({ isError: false, message: \"\" });\n      } else if (data.Response == \"False\") {\n        setError({ isError: true, message: data.Error });\n      }\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"here\");\n    fetchMovies(`${API_ENDPOINT}${urlParams}`);\n  }, [urlParams]);\n  console.log(loading, error, posters);\n  return { loading, error, posters };\n};\nexport default useFetch;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport useFetch from \"./useFetch\";\nexport const API_ENDPOINT = \"https://www.omdbapi.com/?apikey=5325b077\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [searchValue, setSearchValue] = useState(\"batman\");\n  const { loading, error, posters } = useFetch(`&s=${searchValue}`);\n\n  return (\n    <AppContext.Provider\n      value={{ searchValue, setSearchValue, loading, posters, error }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\nconst SearchForm = () => {\n  const { searchValue, setSearchValue, error } = useGlobalContext();\n  return (\n    <form className=\"search-form\" onSubmit={(e) => e.preventDefault()}>\n      <h2>Search movies</h2>\n      <input\n        type=\"text\"\n        className=\"form-input\"\n        value={searchValue}\n        onChange={(e) => setSearchValue(e.target.value)}\n      ></input>\n      <div className=\"error\">{error.isError && error.message}</div>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { Link } from \"react-router-dom\";\nconst url =\n  \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\n//Get data\nconst Movies = () => {\n  const { loading, posters } = useGlobalContext();\n\n  if (loading || posters == null) {\n    return <h2>Loading ...</h2>;\n  }\n  return (\n    <section className=\"movies\">\n      {posters.Search.map((poster) => {\n        const { Title, Year, imdbID, Poster } = poster;\n        return (\n          <Link to={`${\"/movies/\"}${imdbID}`} className=\"movie\" key={imdbID}>\n            <article>\n              <img src={Poster === \"N/A\" ? url : Poster} alt={Title}></img>\n              <div className=\"movie-info\">\n                <h4 className=\"title\">{Title}</h4>\n                <p>{Year}</p>\n              </div>\n            </article>\n          </Link>\n        );\n      })}\n    </section>\n  );\n};\n\nexport default Movies;\n","import React from \"react\";\nimport Form from \"./SearchForm\";\nimport Movies from \"./Movies\";\nconst Home = () => {\n  return (\n    <main>\n      <Form />\n      <Movies />\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nconst SingleMovie = () => {\n  const { imdbID } = useParams();\n  const { loading, error, posters: movie } = useFetch(`&i=${imdbID}`);\n\n  if (loading || movie == null) {\n    return <h3>loading...</h3>;\n  }\n  if (error) {\n  }\n  const { Poster, Title, Plot, Year } = movie;\n  return (\n    <section className=\"single-movie\">\n      <img src={Poster}></img>\n      <div className=\"single-movie-info\">\n        <h2>{Title}</h2>\n        <p>{Plot}</p>\n        <p>{Year}</p>\n        <Link className=\"btn\" to=\"/\">\n          Back to Movies\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default SingleMovie;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Movie from \"./SingleMovie\";\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/movies/:imdbID\">\n          <Movie />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Router>\n        <App />\n      </Router>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}